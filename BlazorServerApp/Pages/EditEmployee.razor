@page "/editemployee/{id}"
@using EmployeeManagement.Models;
@using ReusableBlazorComponents;
@using Microsoft.AspNetCore.Components.Web
@*already  Added Microsoft.AspNetCore.Components.DataAnnotations.Validation nuget package to this project*@
@inherits EditEmployeeBase


<EditForm Model="@Employee">
   
    <h3>Edit Employee</h3>
    <hr />
    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">
            First Name
        </label>
        <div class="col-sm-10">
           
           @* <DataAnnotationsValidator />
            <InputText id="firstName" @bind-Value="EditEmployeeModel.FirstName" />
            <ValidationMessage For="@(() => EditEmployeeModel.FirstName)" />
           *@
            @* It is used <ObjectGraphDataAnnotationsValidator /> instead of DataAnnotationsValidator  for complex-type properties in Employee.cs*@
             <ObjectGraphDataAnnotationsValidator />  
            <input type="text" id="firstName" value="@Employee.FirstName" class="form-control"  />
            <ValidationMessage For="@(() => Employee.FirstName)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="lastName" class="col-sm-2 col-form-label">
            Last Name
        </label>
        <div class="col-sm-10">
            <InputText id="lastName" class="form-control" placeholder="Last Name"
                       @bind-Value="Employee.LastName" />
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" placeholder="Email"
                       @bind-Value="Employee.Email" />
        </div>
    </div>
    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">
            Department
        </label>
        <div class="col-sm-10">
            <CustomInputSelect id="department" @bind-Value="DepartmentId" class="form-control">
                @foreach (var dept in Departments)
                {
                    <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                }
            </CustomInputSelect>
           @* <InputSelect id="department" @bind-Value="DepartmentId" class="form-control">
                @foreach (var dept in Departments)
                {
                    <option value="@dept.DepartmentId">@dept.DepartmentName</option>
                }
            </InputSelect>*@
        </div>

    </div>
    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">
            Geneder
        </label>
        <div class="col-sm-10">
            <CustomInputSelect @bind-Value="Employee.Gender">
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </CustomInputSelect>
        </div>

    </div>
    <div class="form-group row">
        <label for="department" class="col-sm-2 col-form-label">
            DateOfBrith
        </label>
        <div class="col-sm-10">
            <InputDate @bind-Value="Employee.DateOfBrith" />
        </div>

    </div>
</EditForm>

    @*https://www.pragimtech.com/blog/blazor/building-blazor-form/*@
    @*https://www.pragimtech.com/blog/blazor/blazor-select-bind-database-data/*@
    @*https://www.pragimtech.com/blog/blazor/bind-input-select-element-to-enum-in-blazor/
    https://www.pragimtech.com/blog/blazor/blazor-datepicker/*@
